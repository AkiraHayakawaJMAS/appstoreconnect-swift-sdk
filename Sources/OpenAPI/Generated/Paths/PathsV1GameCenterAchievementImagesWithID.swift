// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swiftlint:disable all

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.GameCenterAchievementImages {
	public func id(_ id: String) -> WithID {
		WithID(path: "\(path)/\(id)")
	}

	public struct WithID {
		/// Path: `/v1/gameCenterAchievementImages/{id}`
		public let path: String

		public func get(fieldsGameCenterAchievementImages: [FieldsGameCenterAchievementImages]? = nil, include: [Include]? = nil) -> Request<AppStoreConnect_Swift_SDK.GameCenterAchievementImageResponse> {
			.get(path, query: makeGetQuery(fieldsGameCenterAchievementImages, include))
		}

		private func makeGetQuery(_ fieldsGameCenterAchievementImages: [FieldsGameCenterAchievementImages]?, _ include: [Include]?) -> [(String, String?)] {
			let encoder = URLQueryEncoder(explode: false)
			encoder.encode(fieldsGameCenterAchievementImages, forKey: "fields[gameCenterAchievementImages]")
			encoder.encode(include, forKey: "include")
			return encoder.items
		}

		public enum FieldsGameCenterAchievementImages: String, Codable, CaseIterable {
			case assetDeliveryState
			case fileName
			case fileSize
			case gameCenterAchievementLocalization
			case imageAsset
			case uploadOperations
			case uploaded
		}

		public enum Include: String, Codable, CaseIterable {
			case gameCenterAchievementLocalization
		}

		public func patch(_ body: AppStoreConnect_Swift_SDK.GameCenterAchievementImageUpdateRequest) -> Request<AppStoreConnect_Swift_SDK.GameCenterAchievementImageResponse> {
			.patch(path, body: body)
		}

		public var delete: Request<Void> {
			.delete(path)
		}
	}
}
